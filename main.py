import telebot
from telebot import types
import requests
import datetime
import time
import threading

token = '5633289666:AAE3_bdGVPmfgHDKo6UIjcum6YeAxmj3VHs'
bot = telebot.TeleBot(token)
open_weather_token = '298e9ddda1933c1cb485acf0a9b2b0c3'

times = []
flag = ''
my_city = ''
last_id = 0
last_city = ''
smiles = {
    'Clear': '‚òÄ–Ø—Å–Ω–æ Ô∏è',
    'Clouds': '‚òÅ–û–±–ª–∞—á–Ω–æ Ô∏è',
    'Rain': 'üåß–î–æ–∂–¥—å ',
    'Drizzle': 'üå¶–ú–æ—Ä–æ—Å—å ',
    'Thunderstorm': '‚õà–ì—Ä–æ–∑–∞ ',
    'Snow': '‚õà–°–Ω–µ–≥ ',
    'Mist': 'üå´–¢—É–º–∞–Ω '
}

@bot.message_handler(commands=['start','help'])
def help(message):
    message.text = '–ü–æ–º–æ—â—å ‚ùî'
    get_user_text(message)

@bot.message_handler(commands=['now'])
def now(message):
    message.text = '–ü–æ–≥–æ–¥–∞'
    get_user_text(message)

@bot.message_handler(commands=['choose'])
def choose(message):
    message.text = '–í—ã–±—Ä–∞—Ç—å'
    get_user_text(message)

@bot.message_handler(commands=['settings'])
def settings(message):
    message.text = '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—Å—ã–ª–∫–∏ ‚öôÔ∏è'
    get_user_text(message)

@bot.message_handler(commands=['clean'])
def clean(message):
    message.text = '–û—á–∏—Å—Ç–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ üóë'
    get_user_text(message)

@bot.message_handler(content_types=['text'])
def get_user_text(message):
    global flag
    global my_city
    if(flag=='choosing_city'):
        try:
            if(my_city == message.text and my_city != ''):
                bot.send_message(message.chat.id, '–£ –≤–∞—Å —É–∂–µ –≤—ã–±—Ä–∞–Ω —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥!', 'html')
            else:
                request = requests.get(f'http://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weather_token}&units=metric')
                data = request.json()
                city = data['name']
                my_city = message.text
                flag = ''
                set_start_markup(message,'–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥ ' + message.text + '!')
        except:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ üíÄ')
    elif (flag == 'choosing_time'):
        if (len(message.text) == 5 and message.text[0].isdigit() and ord(message.text[0]) <= 50
                and message.text[1].isdigit() and message.text[3].isdigit() and ord(message.text[3]) <= 53
                and message.text[4].isdigit() and message.text[2] == ':' and not(ord(message.text[0]) == 50 and ord(message.text[1]) >= 52)):
            if(message.text in times):
                bot.send_message(message.chat.id, '–¢–∞–∫–æ–µ –≤—Ä–µ–º—è —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!')
            else:
                times.append(message.text)
                flag = ''
                set_start_markup(message, '–ù–æ–≤–æ–µ –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ' + message.text + '!')
        else:
            bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è!')
    else:
        if (message.text.split()[0] == '–ü–æ–≥–æ–¥–∞'):
            if(my_city==''):
                bot.send_message(message.chat.id, '–í—ã –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥!')
            else:
                get_weather(message.chat.id, my_city)
        elif (message.text.split()[0] == '–í—ã–±—Ä–∞—Ç—å'):
            markup = types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:', 'html', None, None, None, None, None, None, markup)
            flag = 'choosing_city'
        elif (message.text == '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—Å—ã–ª–∫–∏ ‚öôÔ∏è'):
            if(len(times)==0):
                markup = types.InlineKeyboardMarkup()
                button_add = types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è', callback_data='add')
                markup.add(button_add)
                bot.send_message(message.chat.id, '–í—ã –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—Å—ã–ª–∫–∏!', 'html', None, None, None, None, None, None, markup)
            else:
                markup = types.InlineKeyboardMarkup()
                button_add = types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è', callback_data='add')
                markup.add(button_add)
                for el in times:
                    button_el = types.InlineKeyboardButton(el, callback_data=el)
                    markup.add(button_el)
                button_clean = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –≤—Å—ë', callback_data='clean')
                markup.add(button_clean)
                bot.send_message(message.chat.id, '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ —Å–æ–æ–±—â–∞–µ—Ç—Å—è –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ' + my_city + ' –≤ —Å–ª–µ–¥—É—é—â–µ–µ –≤—Ä–µ–º—è:\n', 'html', None, None, None, None, None, None, markup)
        elif (message.text == '–û—á–∏—Å—Ç–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ üóë'):
            if(my_city == ''):
                mes_str = '–ò–∑–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!'
            else:
                mes_str = '–ì–æ—Ä–æ–¥ ' + my_city + ' –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–±—Ä–∞–Ω–Ω—ã–º –≥–æ—Ä–æ–¥–æ–º.'
            my_city = ''
            set_start_markup(message, mes_str)
        elif (message.text == '–ü–æ–º–æ—â—å ‚ùî'):
            set_start_markup(message,
                f"<b>–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å–≤—Ç—É–µ—Ç –±–æ—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã!</b>\n\n"
                f"–ù–∞–ø–∏—à–∏—Ç–µ –µ–º—É –ª—é–±–æ–π –≥–æ—Ä–æ–¥ –Ω–∞ –ª—é–±–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ —ç—Ç–æ–º –≥–æ—Ä–æ–¥–µ!\n" 
                f"–¢–∞–∫–∂–µ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –≥–æ—Ä–æ–¥ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –≤ –ª—é–±–æ–µ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –í–∞—Å –≤—Ä–µ–º—è!\n\n" 
                f"<b>–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n/help - –ø–æ–º–æ—â—å\n/now - –ø–æ–≥–æ–¥–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n"         
                f"/choose - –≤—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥\n/clean - –æ—á–∏—Å—Ç–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥\n"
                f"/settings - –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—Å—ã–ª–∫–∏")
        elif (len(message.text) >= 20 and message.text.split()[0] == '–£–¥–∞–ª–∏—Ç—å'):
            r = message.text.split()[3]
            if(r in times):
                times.remove(message.text.split()[3])
                set_start_markup(message, '–†–∞—Å—Å—ã–ª–∫–∞ –≤ ' + r + ' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω–∞!')
            else:
                set_start_markup(message, '–†–∞—Å—Å—ã–ª–∫–∞ –≤ ' + r + ' —É–∂–µ —É–¥–∞–ª—ë–Ω–∞!')
        elif(message.text == '–û—Ç–º–µ–Ω–∞'):
            set_start_markup(message, '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.')
        else:
            try:
                get_weather(message.chat.id, message.text)
            except:
                bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ üíÄ')
    global last_id
    last_id = message.chat.id


@bot.callback_query_handler(func=lambda c: True)
def callback(call):
    global flag
    if call.message:
        if(call.data == 'add'):
            markup = types.ReplyKeyboardRemove()
            bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú', 'html', None, None, None, None, None, None, markup)
            flag = 'choosing_time'
        elif (call.data == 'clean'):
            bot.send_message(call.message.chat.id, '–í—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∞!')
            times.clear()
            flag = ''
        else:
            markup = types.ReplyKeyboardMarkup(True)
            button_delete = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤ ' + call.data)
            button_cancel = types.KeyboardButton('–û—Ç–º–µ–Ω–∞')
            markup.add(button_delete, button_cancel)
            bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:', 'html', None, None, None, None, None, None, markup)

def get_weather(id, text, add_text = ''):
    request = requests.get(f'http://api.openweathermap.org/data/2.5/weather?q={text}&appid={open_weather_token}&units=metric')
    data = request.json()
    city = data['name']
    temperature = data['main']['temp']
    description = data['weather'][0]['main']
    if description in smiles:
        weather = smiles[description]
    else:
        weather = '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥–Ω–æ–µ —è–≤–ª–µ–Ω–∏–µ!'
    humidity = data['main']['humidity']
    pressure = data['main']['pressure']
    wind = data['wind']['speed']
    sunrise = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
    sunset = datetime.datetime.fromtimestamp(data['sys']['sunset'])
    day_length = datetime.datetime.fromtimestamp(data['sys']['sunset']) - datetime.datetime.fromtimestamp(data['sys']['sunrise'])
    global last_city
    last_city = text
    bot.send_message(id, add_text +
                     f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {text} –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ({datetime.datetime.now().strftime('%d.%m.%Y %H:%M')}):\n"
                     f"üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}C¬∞\n{weather}\n"
                     f"üíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\nüîó–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\nüí®–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
                     f"üåá–í–æ—Å—Ö–æ–¥: {sunrise.strftime('%H:%M:%S')}\nüåÉ–ó–∞–∫–∞—Ç: {sunset.strftime('%H:%M:%S')}\n‚è≥–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {day_length}\n", 'html')

def set_start_markup(message, mes_str):
    markup = types.ReplyKeyboardMarkup(True)
    str = ''
    global my_city
    if (my_city == ''):
        str = '–í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥ ‚ùó'
    else:
        str = '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥ üîÑ'
        button_now = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ' + my_city + ' –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ‚è∞')
        markup.add(button_now)
    button_choose = types.KeyboardButton(str)
    markup.add(button_choose)
    button_delete = types.KeyboardButton('–û—á–∏—Å—Ç–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ üóë')
    markup.add(button_delete)
    button_settings = types.KeyboardButton('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—Å—ã–ª–∫–∏ ‚öôÔ∏è')
    markup.add(button_settings)
    button_help = types.KeyboardButton('–ü–æ–º–æ—â—å ‚ùî')
    markup.add(button_help)
    bot.send_message(message.chat.id, mes_str, 'html', None, None, None, None, None, None, markup)

def sending():
    global my_city
    while True:
        current_time = datetime.datetime.now().strftime('%H:%M:%S')
        time.sleep(1)
        for el in times:
            if current_time == el + ':00' and my_city != "":
                get_weather(last_id, my_city, 'üî•<b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞!</b>üî•\n')

my_thread = threading.Thread(target=sending)
my_thread.start()

bot.polling(none_stop=True)